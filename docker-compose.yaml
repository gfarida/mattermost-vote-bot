version: '3.8'

services:
  postgres:
    image: postgres:13
    environment:
      POSTGRES_USER: mmuser
      POSTGRES_PASSWORD: mmuser_password
      POSTGRES_DB: mattermost
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U mmuser -d mattermost"]
      interval: 5s
      timeout: 5s
      retries: 5

  mattermost:
    image: mattermost/mattermost-team-edition
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      MM_SQLSETTINGS_DRIVERNAME: postgres
      MM_SQLSETTINGS_DATASOURCE: "postgres://mmuser:mmuser_password@postgres:5432/mattermost?sslmode=disable"
    ports:
      - "8065:8065"
    volumes:
      - mattermost_data:/mattermost/data
      - mattermost_config:/mattermost/config

  tarantool:
    image: tarantool/tarantool:2.10
    ports:
      - "3301:3301"
    volumes:
      - tarantool_data:/var/lib/tarantool
      - ./init.tarantool.lua:/opt/tarantool/init.lua
    command: tarantool /opt/tarantool/init.lua

  bot:
    build:
      context: .          
      dockerfile: Dockerfile
    depends_on:
      tarantool:
        condition: service_healthy
      mattermost:
        condition: service_started
    environment:
      MATTERMOST_URL: "http://mattermost:8065"
      MATTERMOST_TOKEN: "MATTERMOST_TOKEN"
      TARANTOOL_URI: "tarantool:3301"


volumes:
  postgres_data:
  mattermost_data:
  mattermost_config:
  tarantool_data: